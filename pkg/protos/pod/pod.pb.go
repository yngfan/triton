// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: pod/pod.proto

package pod

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PodMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PodMeta) Reset() {
	*x = PodMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodMeta) ProtoMessage() {}

func (x *PodMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodMeta.ProtoReflect.Descriptor instead.
func (*PodMeta) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{0}
}

func (x *PodMeta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PodMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PodFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CloneSetName string `protobuf:"bytes,2,opt,name=clonesetName,proto3" json:"clonesetName,omitempty"`
	Ip           string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *PodFilter) Reset() {
	*x = PodFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodFilter) ProtoMessage() {}

func (x *PodFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodFilter.ProtoReflect.Descriptor instead.
func (*PodFilter) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{1}
}

func (x *PodFilter) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PodFilter) GetCloneSetName() string {
	if x != nil {
		return x.CloneSetName
	}
	return ""
}

func (x *PodFilter) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type PodInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InstanceName      string                 `protobuf:"bytes,3,opt,name=instanceName,proto3" json:"instanceName,omitempty"`
	Image             string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Cpu               string                 `protobuf:"bytes,5,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory            string                 `protobuf:"bytes,6,opt,name=memory,proto3" json:"memory,omitempty"`
	GuaranteedCPU     string                 `protobuf:"bytes,7,opt,name=guaranteedCPU,proto3" json:"guaranteedCPU,omitempty"`
	GuaranteedMemory  string                 `protobuf:"bytes,8,opt,name=guaranteedMemory,proto3" json:"guaranteedMemory,omitempty"`
	PublicNetwork     bool                   `protobuf:"varint,9,opt,name=publicNetwork,proto3" json:"publicNetwork,omitempty"`
	ContainerName     string                 `protobuf:"bytes,10,opt,name=containerName,proto3" json:"containerName,omitempty"`
	PodIP             string                 `protobuf:"bytes,11,opt,name=podIP,proto3" json:"podIP,omitempty"`
	Status            string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	HostIP            string                 `protobuf:"bytes,13,opt,name=hostIP,proto3" json:"hostIP,omitempty"`
	UpdateRevision    string                 `protobuf:"bytes,14,opt,name=updateRevision,proto3" json:"updateRevision,omitempty"`
	CreationTimestamp *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
}

func (x *PodInfo) Reset() {
	*x = PodInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodInfo) ProtoMessage() {}

func (x *PodInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodInfo.ProtoReflect.Descriptor instead.
func (*PodInfo) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{2}
}

func (x *PodInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PodInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodInfo) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *PodInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PodInfo) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *PodInfo) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *PodInfo) GetGuaranteedCPU() string {
	if x != nil {
		return x.GuaranteedCPU
	}
	return ""
}

func (x *PodInfo) GetGuaranteedMemory() string {
	if x != nil {
		return x.GuaranteedMemory
	}
	return ""
}

func (x *PodInfo) GetPublicNetwork() bool {
	if x != nil {
		return x.PublicNetwork
	}
	return false
}

func (x *PodInfo) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *PodInfo) GetPodIP() string {
	if x != nil {
		return x.PodIP
	}
	return ""
}

func (x *PodInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PodInfo) GetHostIP() string {
	if x != nil {
		return x.HostIP
	}
	return ""
}

func (x *PodInfo) GetUpdateRevision() string {
	if x != nil {
		return x.UpdateRevision
	}
	return ""
}

func (x *PodInfo) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

type PodMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pod *PodMeta `protobuf:"bytes,1,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *PodMetaRequest) Reset() {
	*x = PodMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodMetaRequest) ProtoMessage() {}

func (x *PodMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodMetaRequest.ProtoReflect.Descriptor instead.
func (*PodMetaRequest) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{3}
}

func (x *PodMetaRequest) GetPod() *PodMeta {
	if x != nil {
		return x.Pod
	}
	return nil
}

type GetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *PodFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	NoSort bool       `protobuf:"varint,2,opt,name=noSort,proto3" json:"noSort,omitempty"`
}

func (x *GetsRequest) Reset() {
	*x = GetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsRequest) ProtoMessage() {}

func (x *GetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsRequest.ProtoReflect.Descriptor instead.
func (*GetsRequest) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{4}
}

func (x *GetsRequest) GetFilter() *PodFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetsRequest) GetNoSort() bool {
	if x != nil {
		return x.NoSort
	}
	return false
}

type PodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pod *PodInfo `protobuf:"bytes,1,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *PodReply) Reset() {
	*x = PodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodReply) ProtoMessage() {}

func (x *PodReply) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodReply.ProtoReflect.Descriptor instead.
func (*PodReply) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{5}
}

func (x *PodReply) GetPod() *PodInfo {
	if x != nil {
		return x.Pod
	}
	return nil
}

type PodsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pods []*PodInfo `protobuf:"bytes,1,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *PodsReply) Reset() {
	*x = PodsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_pod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodsReply) ProtoMessage() {}

func (x *PodsReply) ProtoReflect() protoreflect.Message {
	mi := &file_pod_pod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodsReply.ProtoReflect.Descriptor instead.
func (*PodsReply) Descriptor() ([]byte, []int) {
	return file_pod_pod_proto_rawDescGZIP(), []int{6}
}

func (x *PodsReply) GetPods() []*PodInfo {
	if x != nil {
		return x.Pods
	}
	return nil
}

var File_pod_pod_proto protoreflect.FileDescriptor

var file_pod_pod_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x2f, 0x70, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x70, 0x6f, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x09, 0x50, 0x6f, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x22, 0xf5, 0x03, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65,
	0x64, 0x43, 0x50, 0x55, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x75, 0x61, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x43, 0x50, 0x55, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x75, 0x61,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x64, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x50, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x48, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x30, 0x0a, 0x0e, 0x50, 0x6f, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x70,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50,
	0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x22, 0x4d, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x64,
	0x2e, 0x50, 0x6f, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x08, 0x50, 0x6f,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x22, 0x2d, 0x0a, 0x09, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x6f, 0x64, 0x73, 0x32, 0x5e, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x2b, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50,
	0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x04, 0x47, 0x65, 0x74,
	0x73, 0x12, 0x10, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x69, 0x74, 0x6f, 0x6e, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x72,
	0x69, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x70, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pod_pod_proto_rawDescOnce sync.Once
	file_pod_pod_proto_rawDescData = file_pod_pod_proto_rawDesc
)

func file_pod_pod_proto_rawDescGZIP() []byte {
	file_pod_pod_proto_rawDescOnce.Do(func() {
		file_pod_pod_proto_rawDescData = protoimpl.X.CompressGZIP(file_pod_pod_proto_rawDescData)
	})
	return file_pod_pod_proto_rawDescData
}

var file_pod_pod_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pod_pod_proto_goTypes = []interface{}{
	(*PodMeta)(nil),               // 0: pod.PodMeta
	(*PodFilter)(nil),             // 1: pod.PodFilter
	(*PodInfo)(nil),               // 2: pod.PodInfo
	(*PodMetaRequest)(nil),        // 3: pod.PodMetaRequest
	(*GetsRequest)(nil),           // 4: pod.GetsRequest
	(*PodReply)(nil),              // 5: pod.PodReply
	(*PodsReply)(nil),             // 6: pod.PodsReply
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_pod_pod_proto_depIdxs = []int32{
	7, // 0: pod.PodInfo.creationTimestamp:type_name -> google.protobuf.Timestamp
	0, // 1: pod.PodMetaRequest.pod:type_name -> pod.PodMeta
	1, // 2: pod.GetsRequest.filter:type_name -> pod.PodFilter
	2, // 3: pod.PodReply.pod:type_name -> pod.PodInfo
	2, // 4: pod.PodsReply.pods:type_name -> pod.PodInfo
	3, // 5: pod.Pod.Get:input_type -> pod.PodMetaRequest
	4, // 6: pod.Pod.Gets:input_type -> pod.GetsRequest
	5, // 7: pod.Pod.Get:output_type -> pod.PodReply
	6, // 8: pod.Pod.Gets:output_type -> pod.PodsReply
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pod_pod_proto_init() }
func file_pod_pod_proto_init() {
	if File_pod_pod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pod_pod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_pod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_pod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_pod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_pod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_pod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_pod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pod_pod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pod_pod_proto_goTypes,
		DependencyIndexes: file_pod_pod_proto_depIdxs,
		MessageInfos:      file_pod_pod_proto_msgTypes,
	}.Build()
	File_pod_pod_proto = out.File
	file_pod_pod_proto_rawDesc = nil
	file_pod_pod_proto_goTypes = nil
	file_pod_pod_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PodClient is the client API for Pod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PodClient interface {
	Get(ctx context.Context, in *PodMetaRequest, opts ...grpc.CallOption) (*PodReply, error)
	Gets(ctx context.Context, in *GetsRequest, opts ...grpc.CallOption) (*PodsReply, error)
}

type podClient struct {
	cc grpc.ClientConnInterface
}

func NewPodClient(cc grpc.ClientConnInterface) PodClient {
	return &podClient{cc}
}

func (c *podClient) Get(ctx context.Context, in *PodMetaRequest, opts ...grpc.CallOption) (*PodReply, error) {
	out := new(PodReply)
	err := c.cc.Invoke(ctx, "/pod.Pod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *podClient) Gets(ctx context.Context, in *GetsRequest, opts ...grpc.CallOption) (*PodsReply, error) {
	out := new(PodsReply)
	err := c.cc.Invoke(ctx, "/pod.Pod/Gets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PodServer is the server API for Pod service.
type PodServer interface {
	Get(context.Context, *PodMetaRequest) (*PodReply, error)
	Gets(context.Context, *GetsRequest) (*PodsReply, error)
}

// UnimplementedPodServer can be embedded to have forward compatible implementations.
type UnimplementedPodServer struct {
}

func (*UnimplementedPodServer) Get(context.Context, *PodMetaRequest) (*PodReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPodServer) Gets(context.Context, *GetsRequest) (*PodsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Gets not implemented")
}

func RegisterPodServer(s *grpc.Server, srv PodServer) {
	s.RegisterService(&_Pod_serviceDesc, srv)
}

func _Pod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PodMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pod.Pod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodServer).Get(ctx, req.(*PodMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pod_Gets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PodServer).Gets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pod.Pod/Gets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PodServer).Gets(ctx, req.(*GetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pod.Pod",
	HandlerType: (*PodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Pod_Get_Handler,
		},
		{
			MethodName: "Gets",
			Handler:    _Pod_Gets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pod/pod.proto",
}
